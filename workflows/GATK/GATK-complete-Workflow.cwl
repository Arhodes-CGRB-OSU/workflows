#!/usr/bin/env cwl-runner

class: Workflow

inputs:
  - id: "#reference"
    type: File
    description: reference human genome file 

  - id: "#reads"
    type:
      - "null"
      - type: array
        items: File
    description: files containing the paired end reads in fastq format required for bwa-mem

  - id: "#bwa_output_name"
    type: string
    description: name of bwa-mem output file
    
  - id: "#output_RefDictionaryFile"
    type: string
    description: output file name for picard create dictionary command from picard toolkit
    
  - id: "#samtools-view-isbam"
    type: boolean
    description: boolean set to output bam file from samtools view   
    
  - id: "#output_samtools-view"
    type: string
    description: output file name for bam file generated by samtools view
    
  - id: "#output_samtools-sort"
    type: string
    description: output file name for bam file generated by samtools sort


  - id: "#outputFileName_MarkDuplicates"
    type: string
    description: output file name generated as a result of Markduplicates command from picard toolkit
    
  - id: "#metricsFile_MarkDuplicates"
    type: string
    description: metric file generated by MarkDupicates command listing duplicates

  - id: "#readSorted_MarkDuplicates"
    type: string
    description: set to be true showing that reads are sorted already

  - id: "#removeDuplicates_MarkDuplicates"
    type: string
    description: set to be true
    

  - id: "#createIndex_MarkDuplicates"
    type: string
    description: set to be true to create .bai file from Picard Mark Duplicates
    
  - id: "#outputFileName_RealignTargetCreator"
    type: string
    description: name of realignTargetCreator output file

  - id: "#known_variant_db"
    type:
      - "null"
      - type: array
        items: File
    description: array of known variant files for realign target creator

  - id: "#outputFileName_IndelRealigner"
    type: string
    description: name of indelRealigner output file

  - id: "#outputFileName_BaseRecalibrator"
    type: string
    description: name of BaseRecalibrator output file

  - id: "#outputFileName_PrintReads"
    type: string
    description: name of PrintReads command output file
    
  - id: "#outputFileName_HaplotypeCaller"
    type: string
    description: name of Haplotype caller command output file

  - id: "#dbsnp"
    type: File
    description: vcf file containing SNP variations used for Haplotype caller
 

  - id: "#tmpdir"
    type: ["null", string]
    description: temporary dir for picard 


  - id: "#samtools-view-sambam"
    type: ["null", string]
    description: temporary dir for picard  

  - id: "#covariate"
    type:
      - "null"
      - type: array
        items: string
    description: required for base recalibrator 
 


outputs:

  - id: "#bwamem_output"
    type: File
    source: "#bwa-mem.sam"

  - id: "#ReferenceSequenceDictionary"
    type: File
    source: "#create-dict.createDict_output"
    
  - id: "#samtoolsView_output"
    type: File
    source: "#samtools-view.output"

  - id: "#samtoolsSort_output"
    type: File
    source: "#samtools-sort.sorted"

  - id: "#MarkDuplicates_output"
    type: File
    source: "#MarkDuplicates.markDups_output"

  - id: "#output_realignTarget"
    type: File
    source: "#RealignTarget.output_realignTarget" 
    
  - id: "#output_indelRealigner"
    type: File
    source: "#IndelRealigner.output_indelRealigner"
    
  - id: "#outputfile_baseRecalibrator"
    type: File
    source: "#BaseRecalibrator.output_baseRecalibrator"

  - id: "#output_printReads"
    type: File
    source: "#PrintReads.output_PrintReads"
    
  - id: "#output_HaplotypeCaller"
    type: File
    source: "#HaplotypeCaller.output_HaplotypeCaller"



requirements:
  - import: node-engine.cwl
  - import: envvar-global.cwl
  

steps:

  - id: "#create-dict"
    run: { import: Picard-CreateSequenceDictionary.cwl }
    inputs:

      - { id: "#create-dict.reference", source: "#reference" }
      - { id: "#create-dict.outputFileName", source: "#output_RefDictionaryFile" }
      - { id: "#create-dict.tmpdir", source: "#tmpdir" }
      
      
    outputs:
      - { id: "#create-dict.createDict_output" }


  - id: "#bwa-mem"
    run: { import: BWA-mem.cwl }
    inputs:

      - { id: "#bwa-mem.reference", source: "#reference" }
      - { id: "#bwa-mem.reads", source: "#reads" }
      - { id: "#bwa-mem.dictCreated", source: "#create-dict.createDict_output" }
      - { id: "#bwa-mem.output_name", source: "#bwa_output_name" }
      
    outputs:
      - { id: "#bwa-mem.sam" }
  

  - id: "#samtools-view"
    run: { import: samtools-view.cwl }
    inputs:

      - { id: "#samtools-view.input", source: "#bwa-mem.sam" }
      - { id: "#samtools-view.isbam", source: "#samtools-view-isbam" }
      - { id: "#samtools-view.sambam", source: "#samtools-view-sambam" }
      - { id: "#samtools-view.output_name", source: "#output_samtools-view" }    
  
    outputs:
      - { id: "#samtools-view.output" }
    
  - id: "#samtools-sort"
    run: { import: samtools-sort.cwl }
    inputs:

      - { id: "#samtools-sort.input", source: "#samtools-view.output" }
      - { id: "#samtools-sort.output_name", source: "#output_samtools-sort" }    
      
    outputs:
      - { id: "#samtools-sort.sorted" }

      
  - id: "#MarkDuplicates"
    run: { import: Picard-MarkDuplicates.cwl }
    inputs:
      - { id: "#markDuplicates.outputFileName_markDups", source: "#outputFileName_MarkDuplicates" }
      - { id: "#MarkDuplicates.inputFileName_markDups", source: "#samtools-sort.sorted" }
      - { id: "#MarkDuplicates.metricsFile", source: "#metricsFile_MarkDuplicates" }
      - { id: "#MarkDuplicates.readSorted", source: "#readSorted_MarkDuplicates" }
      - { id: "#MarkDuplicates.removeDuplicates", source: "#removeDuplicates_MarkDuplicates" } 
      - { id: "#MarkDuplicates.createIndex", source: "#createIndex_MarkDuplicates" } 
      
    outputs:
      - { id: "#MarkDuplicates.markDups_output" }
      
      
  - id: "#RealignTarget"
    run: { import: GATK-RealignTargetCreator.cwl }
    inputs:
      - { id: "#RealignTarget.outputfile_realignTarget", source: "#outputFileName_RealignTargetCreator" }
      - { id: "#RealignTarget.inputBam_realign", source: "#MarkDuplicates.markDups_output" }
      - { id: "#RealignTarget.reference", source: "#reference" }
      - { id: "#RealignTarget.known", source: "#known_variant_db" }
      
    outputs:
      - { id: "#RealignTarget.output_realignTarget" }

  - id: "#IndelRealigner"
    run: { import: GATK-IndelRealigner.cwl }
    inputs:
      - { id: "#IndelRealigner.outputfile_indelRealigner", source: "#outputFileName_IndelRealigner" }
      - { id: "#IndelRealigner.inputBam_realign", source: "#MarkDuplicates.markDups_output" }
      - { id: "#IndelRealigner.intervals", source: "#RealignTarget.output_realignTarget" }
      - { id: "#IndelRealigner.reference", source: "#reference" }
      - { id: "#IndelRealigner.known", source: "#known_variant_db" }
      
    outputs:
      - { id: "#IndelRealigner.output_indelRealigner" }

  - id: "#BaseRecalibrator"
    run: { import: GATK-BaseRecalibrator.cwl }
    inputs:
      - { id: "#BaseRecalibrator.outputfile_BaseRecalibrator", source: "#outputFileName_BaseRecalibrator" }
      - { id: "#BaseRecalibrator.inputBam_BaseRecalibrator", source: "#IndelRealigner.output_indelRealigner" }
      - { id: "#BaseRecalibrator.reference", source: "#reference" }
      - { id: "#BaseRecalibrator.covariate", source: "#covariate" }
      - { id: "#BaseRecalibrator.known", source: "#known_variant_db" }
      
    outputs:
      - { id: "#BaseRecalibrator.output_baseRecalibrator" }

  - id: "#PrintReads"
    run: { import: GATK-PrintReads.cwl }
    inputs:
      - { id: "#PrintReads.outputfile_printReads", source: "#outputFileName_PrintReads" }
      - { id: "#PrintReads.inputBam_printReads", source: "#IndelRealigner.output_indelRealigner" }
      - { id: "#PrintReads.reference", source: "#reference" }
      - { id: "#PrintReads.input_baseRecalibrator", source: "#BaseRecalibrator.output_baseRecalibrator" }
    outputs:
      - { id: "#PrintReads.output_PrintReads" }
      
  - id: "#HaplotypeCaller"
    run: { import: GATK-HaplotypeCaller.cwl }
    inputs:
      - { id: "#HaplotypeCaller.outputfile_HaplotypeCaller", source: "#outputFileName_HaplotypeCaller" }
      - { id: "#HaplotypeCaller.inputBam_HaplotypeCaller", source: "#PrintReads.output_PrintReads" }
      - { id: "#HaplotypeCaller.reference", source: "#reference" }
      - { id: "#HaplotypeCaller.dbsnp", source: "#dbsnp" }
    outputs:
      - { id: "#HaplotypeCaller.output_HaplotypeCaller" }

